model PeriodTracker {
  id        String       @id @default(cuid())
  userId    String       @unique @map("user_id")
  periods   Period[]
  symptoms  Symptom[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("period_trackers")
}

model Period {
  id             String           @id @default(cuid())
  startDate      DateTime      @map("start_date")
  endDate        DateTime?     @map("end_date")
  cycleLength    Int?         @map("cycle_length") // Added this field
  periodTrackerId String          @map("period_tracker_id")
  periodTracker   PeriodTracker @relation(fields: [periodTrackerId], references: [id], onDelete: Cascade)
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")

  @@index([periodTrackerId])
  @@map("periods")
}

model Symptom {
  id              String           @id @default(cuid())
  type            String
  severity        Int
  notes           String?       @db.Text
  timestamp       DateTime      @default(now())
  periodTrackerId String          @map("period_tracker_id")
  periodTracker   PeriodTracker @relation(fields: [periodTrackerId], references: [id], onDelete: Cascade)
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")

  @@index([periodTrackerId])
  @@map("symptoms")
}